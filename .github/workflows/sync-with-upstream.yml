name: Sync with Upstream

# Controls when the workflow will run
on:
#   schedule:
#     - cron: '0 0 * * 1'  # Runs every Monday 00:00 UTC

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.SYNC_GH_ACTIONS_PAT }} 
      # The fork repo provided needs to be in the {owner}/{repo} format
      FORK_REPO: yusuf-musleh/tester-repo  # TODO: do not hardcode
      UPSTREAM_REPO: https://github.com/tester-org-1/tester-repo  # TODO: do not hardcode
      FORK_RELEASE: open-release/cool.1
      UPSTREAM_MASTER: main

    steps:
      - name: Get and store current datetime stamp
        id: current-datetime-stamp
        run: echo "DATE_TIME_STAMP=$(date +'%Y%m%d-%s')" >> "$GITHUB_OUTPUT"
      - name: Configure git to use GitHub Cli for credentials
        run: gh auth setup-git -h github.com
      - name: Checkout Forked Repo
        uses: actions/checkout@v3
        with:
          repository: ${{ env.FORK_REPO }}
          token: ${{ secrets.SYNC_GH_ACTIONS_PAT }}
          ref: ${{ env.FORK_RELEASE }}
      - name: Add Remote Upstream
        run: git remote add upstream $UPSTREAM_REPO
      - name: Fetch Latest from Upstream
        run: git fetch upstream
      - name: Create a new branch off Upstream master
        run: git checkout -b sync-$UPSTREAM_MASTER-${{ steps.current-datetime-stamp.outputs.DATE_TIME_STAMP }} upstream/$UPSTREAM_MASTER
      - name: Push new branch to Fork
        run: git push origin
      - name: Create PR on Fork with latest changes from Upstream
        run: >
          gh pr create
          --repo $FORK_REPO
          --base $FORK_RELEASE
          --head $(git branch --show-current)
          --title "Sync $FORK_RELEASE with Upstream ${{ steps.current-datetime-stamp.outputs.DATE_TIME_STAMP }}"
          --body '
          Syncing ${{ FORK_RELEASE }} with Upstream

          ## Conflicts ⚠️ 
          
          In cases of conflicts you can either go ahead and resolve it here on Github UIs if it is simple enough.
          However if it is a more complicated conflict please follow the following steps:

            1. Check out `sync-$UPSTREAM_MASTER-${{ steps.current-datetime-stamp.outputs.DATE_TIME_STAMP }}` locally:
            2. Pull latest changes from `$FORK_RELEASE` into that branch, make sure your `[REMOTE]` is pointing to this repo:
            ```sh
            git pull [REMOTE] $FORK_RELEASE
            ```
            3. Resolve the conflicts locally then commit the result, this will create a new merge commit
            4. Push the new merge commit to `sync-$UPSTREAM_MASTER-${{ steps.current-datetime-stamp.outputs.DATE_TIME_STAMP }}` to update this PR
            5. Review the PR again and merge when ready!'
